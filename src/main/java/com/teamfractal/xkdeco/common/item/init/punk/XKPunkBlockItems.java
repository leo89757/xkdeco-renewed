package com.teamfractal.xkdeco.common.item.init.punk;

import com.teamfractal.xkdeco.common.block.init.punk.XKPunkBlocks;
import com.teamfractal.xkdeco.common.creativeTab.init.XKTabs;
import com.teamfractal.xkdeco.common.util.XKRegistryHandler;
import net.minecraft.world.item.BlockItem;
import net.minecraft.world.item.Item;
import net.minecraftforge.fmllegacy.RegistryObject;

public class XKPunkBlockItems {
    public static RegistryObject<Item> steelBlock;
    public static RegistryObject<Item> steelTiles;
    public static RegistryObject<Item> steelTileSlab;
    public static RegistryObject<Item> steelTileStair;
    public static RegistryObject<Item> smoothSteelBlock;
    public static RegistryObject<Item> steelPillar;
    public static RegistryObject<Item> steelColumn;
    public static RegistryObject<Item> steelColumnHead;
    public static RegistryObject<Item> factoryBlock;
    public static RegistryObject<Item> factorySlab;
    public static RegistryObject<Item> factoryStair;
    public static RegistryObject<Item> factoryBlockRusting;
    public static RegistryObject<Item> factorySlabRusting;
    public static RegistryObject<Item> factoryStairRusting;
    public static RegistryObject<Item> factoryBlockRusted;
    public static RegistryObject<Item> factorySlabRusted;
    public static RegistryObject<Item> factoryStairRusted;
    public static RegistryObject<Item> factoryDanger;
    public static RegistryObject<Item> factoryDangerRusting;
    public static RegistryObject<Item> factoryDangerRusted;
    public static RegistryObject<Item> factoryAttention;
    public static RegistryObject<Item> factoryAttentionRusting;
    public static RegistryObject<Item> factoryAttentionRusted;
    public static RegistryObject<Item> factoryElectricity;
    public static RegistryObject<Item> factoryElectricityRusting;
    public static RegistryObject<Item> factoryElectricityRusted;
    public static RegistryObject<Item> factoryToxic;
    public static RegistryObject<Item> factoryToxicRusting;
    public static RegistryObject<Item> factoryToxicRusted;
    public static RegistryObject<Item> factoryRadiation;
    public static RegistryObject<Item> factoryRadiationRusting;
    public static RegistryObject<Item> factoryRadiationRusted;
    public static RegistryObject<Item> factoryBiohazard;
    public static RegistryObject<Item> factoryBiohazardRusting;
    public static RegistryObject<Item> factoryBiohazardRusted;
    public static RegistryObject<Item> hollowSteelFrame;
    public static RegistryObject<Item> hollowSteelBeam;
    public static RegistryObject<Item> hollowSteelTrapdoor;
    public static RegistryObject<Item> steelTrapdoor;
    public static RegistryObject<Item> hollowSteelObliqueBeam;
    public static RegistryObject<Item> hollowSteelObliqueBeamGentle;
    public static RegistryObject<Item> hollowSteelObliqueBeamSteep;
    public static RegistryObject<Item> hollowSteelHalfBeam;
    public static RegistryObject<Item> hollowSteelBar;
    public static RegistryObject<Item> steelSafetyLadder;
    //ventiduct
    public static RegistryObject<Item> steelVentiduct;
    public static RegistryObject<Item> ventiductCorner;
    public static RegistryObject<Item> ventiductUp;
    public static RegistryObject<Item> ventiductDown;
    public static RegistryObject<Item> ventiductSixway;
    public static RegistryObject<Item> ventiductCover;
    public static RegistryObject<Item> ventiductOblique;
    public static RegistryObject<Item> ventiductObliqueSecond;
    public static RegistryObject<Item> factoryVentFan;
    public static RegistryObject<Item> factoryVentFanBig;
    public static RegistryObject<Item> factoryTrapdoor;
    public static RegistryObject<Item> factoryTrapdoorRusting;
    public static RegistryObject<Item> factoryTrapdoorRusted;
    public static RegistryObject<Item> fanBlade;
    public static RegistryObject<Item> steelWindmill;
    public static RegistryObject<Item> ironWindmill;
    public static RegistryObject<Item> woodenWindmill;
    public static RegistryObject<Item> factoryLamp;
    public static RegistryObject<Item> factoryLampBroken;
    public static RegistryObject<Item> factoryWarningLamp;
    public static RegistryObject<Item> factoryLightBar;
    public static RegistryObject<Item> factoryCeilingLamp;
    public static RegistryObject<Item> factoryPendant;
    public static RegistryObject<Item> factoryLampBlock;
    public static RegistryObject<Item> factoryLampSlab;
    public static RegistryObject<Item> factoryLampStair;
    public static RegistryObject<Item> screenOff;
    //screen
    public static RegistryObject<Item> screenOn;
    public static RegistryObject<Item> screenCube;
    public static RegistryObject<Item> screenDiagram;
    public static RegistryObject<Item> screenDna;
    public static RegistryObject<Item> screenList;
    public static RegistryObject<Item> screenMessage;
    public static RegistryObject<Item> screenThreebodies;
    public static RegistryObject<Item> screenTransport;
    public static RegistryObject<Item> mechanicalConsole;
    public static RegistryObject<Item> mechanicalScreen;
    public static RegistryObject<Item> mechanicalChair;
    public static RegistryObject<Item> techConsole;
    public static RegistryObject<Item> techScreen;
    public static RegistryObject<Item> techChair;
    public static RegistryObject<Item> techTable;
    public static RegistryObject<Item> techTableCircle;
    public static RegistryObject<Item> techTableBigcircle;
    public static RegistryObject<Item> hologramPlanet;
    public static RegistryObject<Item> hologramDna;
    public static RegistryObject<Item> hologramPictures;
    public static RegistryObject<Item> hologramMessage;
    public static RegistryObject<Item> hologramXekrLogo;
    public static RegistryObject<Item> hologramBase;

    public static void register(){
        steelBlock = XKRegistryHandler.Items.register("steel_block", () -> new BlockItem(XKPunkBlocks.steelBlock.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        steelTiles = XKRegistryHandler.Items.register("steel_tiles", () -> new BlockItem(XKPunkBlocks.steelTiles.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        steelTileSlab = XKRegistryHandler.Items.register("steel_tile_slab", () -> new BlockItem(XKPunkBlocks.steelTileSlab.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        steelTileStair = XKRegistryHandler.Items.register("steel_tile_stair", () -> new BlockItem(XKPunkBlocks.steelTileStair.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        smoothSteelBlock = XKRegistryHandler.Items.register("smooth_steel_block", () -> new BlockItem(XKPunkBlocks.smoothSteelBlock.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        steelPillar = XKRegistryHandler.Items.register("steel_pillar", () -> new BlockItem(XKPunkBlocks.steelPillar.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        steelColumn = XKRegistryHandler.Items.register("steel_column", () -> new BlockItem(XKPunkBlocks.steelColumn.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        steelColumnHead = XKRegistryHandler.Items.register("steel_column_head", () -> new BlockItem(XKPunkBlocks.steelColumnHead.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        factoryBlock = XKRegistryHandler.Items.register("factory_block", () -> new BlockItem(XKPunkBlocks.factoryBlock.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        factorySlab = XKRegistryHandler.Items.register("factory_slab", () -> new BlockItem(XKPunkBlocks.factorySlab.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        factoryStair = XKRegistryHandler.Items.register("factory_stair", () -> new BlockItem(XKPunkBlocks.factoryStair.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        factoryBlockRusting = XKRegistryHandler.Items.register("factory_block_rusting", () -> new BlockItem(XKPunkBlocks.factoryBlockRusting.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        factorySlabRusting = XKRegistryHandler.Items.register("factory_slab_rusting", () -> new BlockItem(XKPunkBlocks.factorySlabRusting.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        factoryStairRusting = XKRegistryHandler.Items.register("factory_stair_rusting", () -> new BlockItem(XKPunkBlocks.factoryStairRusting.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        factoryBlockRusted = XKRegistryHandler.Items.register("factory_block_rusted", () -> new BlockItem(XKPunkBlocks.factoryBlockRusted.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        factorySlabRusted = XKRegistryHandler.Items.register("factory_slab_rusted", () -> new BlockItem(XKPunkBlocks.factorySlabRusted.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        factoryStairRusted = XKRegistryHandler.Items.register("factory_stair_rusted", () -> new BlockItem(XKPunkBlocks.factoryStairRusted.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        factoryDanger = XKRegistryHandler.Items.register("factory_danger", () -> new BlockItem(XKPunkBlocks.factoryDanger.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        factoryDangerRusting = XKRegistryHandler.Items.register("factory_danger_rusting", () -> new BlockItem(XKPunkBlocks.factoryDangerRusting.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        factoryDangerRusted = XKRegistryHandler.Items.register("factory_danger_rusted", () -> new BlockItem(XKPunkBlocks.factoryDangerRusted.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        factoryAttention = XKRegistryHandler.Items.register("factory_attention", () -> new BlockItem(XKPunkBlocks.factoryAttention.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        factoryAttentionRusting = XKRegistryHandler.Items.register("factory_attention_rusting", () -> new BlockItem(XKPunkBlocks.factoryAttentionRusting.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        factoryAttentionRusted = XKRegistryHandler.Items.register("factory_attention_rusted", () -> new BlockItem(XKPunkBlocks.factoryAttentionRusted.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        factoryElectricity = XKRegistryHandler.Items.register("factory_electricity", () -> new BlockItem(XKPunkBlocks.factoryElectricity.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        factoryElectricityRusting = XKRegistryHandler.Items.register("factory_electricity_rusting", () -> new BlockItem(XKPunkBlocks.factoryElectricityRusting.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        factoryElectricityRusted = XKRegistryHandler.Items.register("factory_electricity_rusted", () -> new BlockItem(XKPunkBlocks.factoryElectricityRusted.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        factoryToxic = XKRegistryHandler.Items.register("factory_toxic", () -> new BlockItem(XKPunkBlocks.factoryToxic.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        factoryToxicRusting = XKRegistryHandler.Items.register("factory_toxic_rusting", () -> new BlockItem(XKPunkBlocks.factoryToxicRusting.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        factoryToxicRusted = XKRegistryHandler.Items.register("factory_toxic_rusted", () -> new BlockItem(XKPunkBlocks.factoryToxicRusted.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        factoryRadiation = XKRegistryHandler.Items.register("factory_radiation", () -> new BlockItem(XKPunkBlocks.factoryRadiation.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        factoryRadiationRusting = XKRegistryHandler.Items.register("factory_radiation_rusting", () -> new BlockItem(XKPunkBlocks.factoryRadiationRusting.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        factoryRadiationRusted = XKRegistryHandler.Items.register("factory_radiation_rusted", () -> new BlockItem(XKPunkBlocks.factoryRadiationRusted.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        factoryBiohazard = XKRegistryHandler.Items.register("factory_biohazard", () -> new BlockItem(XKPunkBlocks.factoryBiohazard.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        factoryBiohazardRusting = XKRegistryHandler.Items.register("factory_biohazard_rusting", () -> new BlockItem(XKPunkBlocks.factoryBiohazardRusting.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        factoryBiohazardRusted = XKRegistryHandler.Items.register("factory_biohazard_rusted", () -> new BlockItem(XKPunkBlocks.factoryBiohazardRusted.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        hollowSteelFrame = XKRegistryHandler.Items.register("hollow_steel_frame", () -> new BlockItem(XKPunkBlocks.hollowSteelFrame.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        hollowSteelBeam = XKRegistryHandler.Items.register("hollow_steel_beam", () -> new BlockItem(XKPunkBlocks.hollowSteelBeam.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        hollowSteelTrapdoor = XKRegistryHandler.Items.register("hollow_steel_trapdoor", () -> new BlockItem(XKPunkBlocks.hollowSteelTrapdoor.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        steelTrapdoor = XKRegistryHandler.Items.register("steel_trapdoor", () -> new BlockItem(XKPunkBlocks.steelTrapdoor.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        hollowSteelObliqueBeam = XKRegistryHandler.Items.register("hollow_steel_oblique_beam", () -> new BlockItem(XKPunkBlocks.hollowSteelObliqueBeam.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        hollowSteelObliqueBeamGentle = XKRegistryHandler.Items.register("hollow_steel_oblique_beam_gentle", () -> new BlockItem(XKPunkBlocks.hollowSteelObliqueBeamGentle.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        hollowSteelObliqueBeamSteep = XKRegistryHandler.Items.register("hollow_steel_oblique_beam_steep", () -> new BlockItem(XKPunkBlocks.hollowSteelObliqueBeamSteep.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        hollowSteelHalfBeam = XKRegistryHandler.Items.register("hollow_steel_half_beam", () -> new BlockItem(XKPunkBlocks.hollowSteelHalfBeam.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        hollowSteelBar = XKRegistryHandler.Items.register("hollow_steel_bar", () -> new BlockItem(XKPunkBlocks.hollowSteelBar.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        steelSafetyLadder = XKRegistryHandler.Items.register("steel_safety_ladder", () -> new BlockItem(XKPunkBlocks.steelSafetyLadder.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        steelVentiduct = XKRegistryHandler.Items.register("ventiduct", () -> new BlockItem(XKPunkBlocks.steelVentiduct.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        ventiductCorner = XKRegistryHandler.Items.register("ventiduct_corner", () -> new BlockItem(XKPunkBlocks.ventiductCorner.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        ventiductUp = XKRegistryHandler.Items.register("ventiduct_up", () -> new BlockItem(XKPunkBlocks.ventiductUp.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        ventiductDown = XKRegistryHandler.Items.register("ventiduct_down", () -> new BlockItem(XKPunkBlocks.ventiductDown.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        ventiductSixway = XKRegistryHandler.Items.register("ventiduct_sixway", () -> new BlockItem(XKPunkBlocks.ventiductSixway.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        ventiductCover = XKRegistryHandler.Items.register("ventiduct_cover", () -> new BlockItem(XKPunkBlocks.ventiductCover.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        ventiductOblique = XKRegistryHandler.Items.register("ventiduct_oblique", () -> new BlockItem(XKPunkBlocks.ventiductOblique.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        ventiductObliqueSecond = XKRegistryHandler.Items.register("ventiduct_oblique_second", () -> new BlockItem(XKPunkBlocks.ventiductObliqueSecond.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        factoryVentFan = XKRegistryHandler.Items.register("factory_vent_fan", () -> new BlockItem(XKPunkBlocks.factoryVentFan.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        factoryVentFanBig = XKRegistryHandler.Items.register("factory_vent_fan_big", () -> new BlockItem(XKPunkBlocks.factoryVentFanBig.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        factoryTrapdoor = XKRegistryHandler.Items.register("factory_trapdoor", () -> new BlockItem(XKPunkBlocks.factoryTrapdoor.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        factoryTrapdoorRusting = XKRegistryHandler.Items.register("factory_trapdoor_rusting", () -> new BlockItem(XKPunkBlocks.factoryTrapdoorRusting.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        factoryTrapdoorRusted = XKRegistryHandler.Items.register("factory_trapdoor_rusted", () -> new BlockItem(XKPunkBlocks.factoryTrapdoorRusted.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        fanBlade = XKRegistryHandler.Items.register("fan_blade", () -> new BlockItem(XKPunkBlocks.fanBlade.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        steelWindmill = XKRegistryHandler.Items.register("steel_windmill", () -> new BlockItem(XKPunkBlocks.steelWindmill.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        ironWindmill = XKRegistryHandler.Items.register("iron_windmill", () -> new BlockItem(XKPunkBlocks.ironWindmill.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        woodenWindmill = XKRegistryHandler.Items.register("wooden_windmill", () -> new BlockItem(XKPunkBlocks.woodenWindmill.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        factoryLamp = XKRegistryHandler.Items.register("factory_lamp", () -> new BlockItem(XKPunkBlocks.factoryLamp.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        factoryLampBroken = XKRegistryHandler.Items.register("factory_lamp_broken", () -> new BlockItem(XKPunkBlocks.factoryLampBroken.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        factoryWarningLamp = XKRegistryHandler.Items.register("factory_warning_lamp", () -> new BlockItem(XKPunkBlocks.factoryWarningLamp.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        factoryLightBar = XKRegistryHandler.Items.register("factory_light_bar", () -> new BlockItem(XKPunkBlocks.factoryLightBar.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        factoryCeilingLamp = XKRegistryHandler.Items.register("factory_ceiling_lamp", () -> new BlockItem(XKPunkBlocks.factoryCeilingLamp.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        factoryPendant = XKRegistryHandler.Items.register("factory_pendant", () -> new BlockItem(XKPunkBlocks.factoryPendant.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        factoryLampBlock = XKRegistryHandler.Items.register("factory_lamp_block", () -> new BlockItem(XKPunkBlocks.factoryLampBlock.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        factoryLampSlab = XKRegistryHandler.Items.register("factory_lamp_slab", () -> new BlockItem(XKPunkBlocks.factoryLampSlab.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        factoryLampStair = XKRegistryHandler.Items.register("factory_lamp_stair", () -> new BlockItem(XKPunkBlocks.factoryLampStair.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        screenOff = XKRegistryHandler.Items.register("screen_off", () -> new BlockItem(XKPunkBlocks.screenOff.get(), new Item.Properties().tab(XKTabs.xkpunk)));
        screenOn = XKRegistryHandler.Items.register("screen", () -> new BlockItem(XKPunkBlocks.screenOn.get(), new Item.Properties().tab(XKTabs.xkpunk)));
        screenCube = XKRegistryHandler.Items.register("screen_cube", () -> new BlockItem(XKPunkBlocks.screenCube.get(), new Item.Properties().tab(XKTabs.xkpunk)));
        screenDiagram = XKRegistryHandler.Items.register("screen_diagram", () -> new BlockItem(XKPunkBlocks.screenDiagram.get(), new Item.Properties().tab(XKTabs.xkpunk)));
        screenDna = XKRegistryHandler.Items.register("screen_dna", () -> new BlockItem(XKPunkBlocks.screenDna.get(), new Item.Properties().tab(XKTabs.xkpunk)));
        screenList = XKRegistryHandler.Items.register("screen_list", () -> new BlockItem(XKPunkBlocks.screenList.get(), new Item.Properties().tab(XKTabs.xkpunk)));
        screenMessage = XKRegistryHandler.Items.register("screen_message", () -> new BlockItem(XKPunkBlocks.screenMessage.get(), new Item.Properties().tab(XKTabs.xkpunk)));
        screenThreebodies = XKRegistryHandler.Items.register("screen_threebodies", () -> new BlockItem(XKPunkBlocks.screenThreebodies.get(), new Item.Properties().tab(XKTabs.xkpunk)));
        screenTransport = XKRegistryHandler.Items.register("screen_transport", () -> new BlockItem(XKPunkBlocks.screenTransport.get(), new Item.Properties().tab(XKTabs.xkpunk)));
        mechanicalConsole = XKRegistryHandler.Items.register("mechanical_console", () -> new BlockItem(XKPunkBlocks.mechanicalConsole.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        mechanicalScreen = XKRegistryHandler.Items.register("mechanical_screen", () -> new BlockItem(XKPunkBlocks.mechanicalScreen.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        mechanicalChair = XKRegistryHandler.Items.register("mechanical_chair", () -> new BlockItem(XKPunkBlocks.mechanicalChair.get(), new Item.Properties().tab(XKTabs.xkpunk)));
        techConsole = XKRegistryHandler.Items.register("tech_console", () -> new BlockItem(XKPunkBlocks.techConsole.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        techScreen = XKRegistryHandler.Items.register("tech_screen", () -> new BlockItem(XKPunkBlocks.techScreen.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        techChair = XKRegistryHandler.Items.register("tech_chair", () -> new BlockItem(XKPunkBlocks.techChair.get(), new Item.Properties().tab(XKTabs.xkpunk)));
        techTable = XKRegistryHandler.Items.register("tech_table", () -> new BlockItem(XKPunkBlocks.techTable.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        techTableCircle = XKRegistryHandler.Items.register("tech_table_circle", () -> new BlockItem(XKPunkBlocks.techTableCircle.get(),new Item.Properties().tab(XKTabs.xkpunk)));
        techTableBigcircle = XKRegistryHandler.Items.register("tech_table_bigcircle", () -> new BlockItem(XKPunkBlocks.techTableBigcircle.get(), new Item.Properties().tab(XKTabs.xkpunk)));
        hologramPlanet = XKRegistryHandler.Items.register("hologram_planet", () -> new Item(new Item.Properties().tab(XKTabs.xkpunk)));
        hologramDna = XKRegistryHandler.Items.register("hologram_dna", () -> new Item(new Item.Properties().tab(XKTabs.xkpunk)));
        hologramPictures = XKRegistryHandler.Items.register("hologram_pictures", () -> new Item(new Item.Properties().tab(XKTabs.xkpunk)));
        hologramMessage = XKRegistryHandler.Items.register("hologram_message", () -> new Item(new Item.Properties().tab(XKTabs.xkpunk)));
        hologramXekrLogo = XKRegistryHandler.Items.register("hologram_xekr_logo", () -> new Item(new Item.Properties().tab(XKTabs.xkpunk)));
        hologramBase = XKRegistryHandler.Items.register("hologram_base", () -> new BlockItem(XKPunkBlocks.hologramBase.get(), new Item.Properties().tab(XKTabs.xkpunk)));
    }
}
