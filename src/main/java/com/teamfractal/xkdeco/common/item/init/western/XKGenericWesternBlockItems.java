package com.teamfractal.xkdeco.common.item.init.western;

import com.teamfractal.xkdeco.common.block.init.western.XKGenericWesternBlocks;
import com.teamfractal.xkdeco.common.creativeTab.init.XKTabs;
import com.teamfractal.xkdeco.common.util.XKRegistryHandler;
import net.minecraft.world.item.BlockItem;
import net.minecraft.world.item.Item;
import net.minecraftforge.fmllegacy.RegistryObject;

public class XKGenericWesternBlockItems {
    public static RegistryObject<Item> sandstonePillar;
    public static RegistryObject<Item> polishedSandstone;
    public static RegistryObject<Item> polishedSandstoneSlab;
    public static RegistryObject<Item> sandstoneBricks;
    public static RegistryObject<Item> sandstoneBrickSlab;
    public static RegistryObject<Item> sandstoneBrickStair;
    public static RegistryObject<Item> sandstoneSmallBricks;
    public static RegistryObject<Item> sandstoneSmallBrickSlab;
    public static RegistryObject<Item> sandstoneSmallBrickStair;
    public static RegistryObject<Item> egyptianColumnBase;
    public static RegistryObject<Item> egyptianColumn;
    public static RegistryObject<Item> egyptianColumnHead;
    public static RegistryObject<Item> egyptianBrickColumnBase;
    public static RegistryObject<Item> egyptianBrickColumn;
    public static RegistryObject<Item> egyptianBrickColumnHead;
    public static RegistryObject<Item> egyptianBumpColumnBase;
    public static RegistryObject<Item> egyptianBumpColumn;
    public static RegistryObject<Item> egyptianBumpColumnHead;
    public static RegistryObject<Item> egyptianStripeColumnBase;
    public static RegistryObject<Item> egyptianStripeColumn;
    public static RegistryObject<Item> egyptianStripeColumnHead;
    public static RegistryObject<Item> egyptianCarvedColumnBase;
    public static RegistryObject<Item> egyptianCarvedColumn;
    public static RegistryObject<Item> egyptianSmoothColumnBase;
    public static RegistryObject<Item> egyptianSmoothColumn;
    public static RegistryObject<Item> obeliskHead;
    public static RegistryObject<Item> egyptianMoulding;
    public static RegistryObject<Item> quartzWall;
    public static RegistryObject<Item> greekColumn;
    public static RegistryObject<Item> greekDoricColumnHead;
    public static RegistryObject<Item> greekIonicColumnBase;
    public static RegistryObject<Item> greekIonicColumnHead;
    public static RegistryObject<Item> greekIonicColumnHeadCorner;
    public static RegistryObject<Item> greekCorinthianColumnBase;
    public static RegistryObject<Item> greekCorinthianColumnHead;
    public static RegistryObject<Item> greekMoulding;
    public static RegistryObject<Item> stoneBrickPillar;
    public static RegistryObject<Item> stoneBrickPavement;
    public static RegistryObject<Item> romanColumnBase;
    public static RegistryObject<Item> romanToscanColumnBase;
    public static RegistryObject<Item> romanToscanColumn;
    public static RegistryObject<Item> romanToscanColumnHead;
    public static RegistryObject<Item> romanDoricColumnBase;
    public static RegistryObject<Item> romanDoricColumn;
    public static RegistryObject<Item> romanDoricColumnHead;
    public static RegistryObject<Item> romanIonicColumnBase;
    public static RegistryObject<Item> romanColumn;
    public static RegistryObject<Item> romanIonicColumnHead;
    public static RegistryObject<Item> romanIonicColumnHeadCorner;
    public static RegistryObject<Item> romanCorinthianColumnBase;
    public static RegistryObject<Item> romanCorinthianColumnHead;
    public static RegistryObject<Item> romanCompositeColumnBase;
    public static RegistryObject<Item> romanCompositeColumnHead;
    public static RegistryObject<Item> romanMoulding;

    public static void register(){
        sandstonePillar = XKRegistryHandler.Items.register("sandstone_pillar", () -> new BlockItem(XKGenericWesternBlocks.sandstonePillar.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        polishedSandstone = XKRegistryHandler.Items.register("polished_sandstone", () -> new BlockItem(XKGenericWesternBlocks.polishedSandstone.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        polishedSandstoneSlab = XKRegistryHandler.Items.register("polished_sandstone_slab", () -> new BlockItem(XKGenericWesternBlocks.polishedSandstoneSlab.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        sandstoneBricks = XKRegistryHandler.Items.register("sandstone_bricks", () -> new BlockItem(XKGenericWesternBlocks.sandstoneBricks.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        sandstoneBrickSlab = XKRegistryHandler.Items.register("sandstone_brick_slab", () -> new BlockItem(XKGenericWesternBlocks.sandstoneBrickSlab.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        sandstoneBrickStair = XKRegistryHandler.Items.register("sandstone_brick_stair", () -> new BlockItem(XKGenericWesternBlocks.sandstoneBrickStair.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        sandstoneSmallBricks = XKRegistryHandler.Items.register("sandstone_small_bricks", () -> new BlockItem(XKGenericWesternBlocks.sandstoneSmallBricks.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        sandstoneSmallBrickSlab = XKRegistryHandler.Items.register("sandstone_small_brick_slab", () -> new BlockItem(XKGenericWesternBlocks.sandstoneSmallBrickSlab.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        sandstoneSmallBrickStair = XKRegistryHandler.Items.register("sandstone_small_brick_stair", () -> new BlockItem(XKGenericWesternBlocks.sandstoneSmallBrickStair.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        egyptianColumnBase = XKRegistryHandler.Items.register("egyptian_column_base", () -> new BlockItem(XKGenericWesternBlocks.egyptianColumnBase.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        egyptianColumn = XKRegistryHandler.Items.register("egyptian_column", () -> new BlockItem(XKGenericWesternBlocks.egyptianColumn.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        egyptianColumnHead = XKRegistryHandler.Items.register("egyptian_column_head", () -> new BlockItem(XKGenericWesternBlocks.egyptianColumnHead.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        egyptianBrickColumnBase = XKRegistryHandler.Items.register("egyptian_brick_column_base", () -> new BlockItem(XKGenericWesternBlocks.egyptianBrickColumnBase.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        egyptianBrickColumn = XKRegistryHandler.Items.register("egyptian_brick_column", () -> new BlockItem(XKGenericWesternBlocks.egyptianBrickColumn.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        egyptianBrickColumnHead = XKRegistryHandler.Items.register("egyptian_brick_column_head", () -> new BlockItem(XKGenericWesternBlocks.egyptianBrickColumnHead.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        egyptianBumpColumnBase = XKRegistryHandler.Items.register("egyptian_bump_column_base", () -> new BlockItem(XKGenericWesternBlocks.egyptianBumpColumnBase.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        egyptianBumpColumn = XKRegistryHandler.Items.register("egyptian_bump_column", () -> new BlockItem(XKGenericWesternBlocks.egyptianBumpColumn.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        egyptianBumpColumnHead = XKRegistryHandler.Items.register("egyptian_bump_column_head", () -> new BlockItem(XKGenericWesternBlocks.egyptianBumpColumnHead.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        egyptianStripeColumnBase = XKRegistryHandler.Items.register("egyptian_stripe_column_base", () -> new BlockItem(XKGenericWesternBlocks.egyptianStripeColumnBase.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        egyptianStripeColumn = XKRegistryHandler.Items.register("egyptian_stripe_column", () -> new BlockItem(XKGenericWesternBlocks.egyptianStripeColumn.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        egyptianStripeColumnHead = XKRegistryHandler.Items.register("egyptian_stripe_column_head", () -> new BlockItem(XKGenericWesternBlocks.egyptianStripeColumnHead.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        egyptianCarvedColumnBase = XKRegistryHandler.Items.register("egyptian_carved_column_base", () -> new BlockItem(XKGenericWesternBlocks.egyptianCarvedColumnBase.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        egyptianCarvedColumn = XKRegistryHandler.Items.register("egyptian_carved_column", () -> new BlockItem(XKGenericWesternBlocks.egyptianCarvedColumn.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        egyptianSmoothColumnBase = XKRegistryHandler.Items.register("egyptian_smooth_column_base", () -> new BlockItem(XKGenericWesternBlocks.egyptianSmoothColumnBase.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        egyptianSmoothColumn = XKRegistryHandler.Items.register("egyptian_smooth_column", () -> new BlockItem(XKGenericWesternBlocks.egyptianSmoothColumn.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        obeliskHead = XKRegistryHandler.Items.register("obelisk_head", () -> new BlockItem(XKGenericWesternBlocks.obeliskHead.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        egyptianMoulding = XKRegistryHandler.Items.register("egyptian_moulding", () -> new BlockItem(XKGenericWesternBlocks.egyptianMoulding.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        quartzWall = XKRegistryHandler.Items.register("quartz_wall", () -> new BlockItem(XKGenericWesternBlocks.quartzWall.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        greekColumn = XKRegistryHandler.Items.register("greek_column", () -> new BlockItem(XKGenericWesternBlocks.greekColumn.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        greekDoricColumnHead = XKRegistryHandler.Items.register("greek_doric_column_head", () -> new BlockItem(XKGenericWesternBlocks.greekDoricColumnHead.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        greekIonicColumnBase = XKRegistryHandler.Items.register("greek_ionic_column_base", () -> new BlockItem(XKGenericWesternBlocks.greekIonicColumnBase.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        greekIonicColumnHead = XKRegistryHandler.Items.register("greek_ionic_column_head", () -> new BlockItem(XKGenericWesternBlocks.greekIonicColumnHead.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        greekIonicColumnHeadCorner = XKRegistryHandler.Items.register("greek_ionic_column_head_corner", () -> new BlockItem(XKGenericWesternBlocks.greekIonicColumnHeadCorner.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        greekCorinthianColumnBase = XKRegistryHandler.Items.register("greek_corinthian_column_base", () -> new BlockItem(XKGenericWesternBlocks.greekCorinthianColumnBase.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        greekCorinthianColumnHead = XKRegistryHandler.Items.register("greek_corinthian_column_head", () -> new BlockItem(XKGenericWesternBlocks.greekCorinthianColumnHead.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        greekMoulding = XKRegistryHandler.Items.register("greek_moulding", () -> new BlockItem(XKGenericWesternBlocks.greekMoulding.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        stoneBrickPillar = XKRegistryHandler.Items.register("stone_brick_pillar", () -> new BlockItem(XKGenericWesternBlocks.stoneBrickPillar.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        stoneBrickPavement = XKRegistryHandler.Items.register("stone_brick_pavement", () -> new BlockItem(XKGenericWesternBlocks.stoneBrickPavement.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        romanColumnBase = XKRegistryHandler.Items.register("roman_column_base", () -> new BlockItem(XKGenericWesternBlocks.romanColumnBase.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        romanToscanColumnBase = XKRegistryHandler.Items.register("roman_toscan_column_base", () -> new BlockItem(XKGenericWesternBlocks.romanToscanColumnBase.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        romanToscanColumn = XKRegistryHandler.Items.register("roman_toscan_column", () -> new BlockItem(XKGenericWesternBlocks.romanToscanColumn.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        romanToscanColumnHead = XKRegistryHandler.Items.register("roman_toscan_column_head", () -> new BlockItem(XKGenericWesternBlocks.romanToscanColumnHead.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        romanDoricColumnBase = XKRegistryHandler.Items.register("roman_doric_column_base", () -> new BlockItem(XKGenericWesternBlocks.romanDoricColumnBase.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        romanDoricColumn = XKRegistryHandler.Items.register("roman_doric_column", () -> new BlockItem(XKGenericWesternBlocks.romanDoricColumn.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        romanDoricColumnHead = XKRegistryHandler.Items.register("roman_doric_column_head", () -> new BlockItem(XKGenericWesternBlocks.romanDoricColumnHead.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        romanIonicColumnBase = XKRegistryHandler.Items.register("roman_ionic_column_base", () -> new BlockItem(XKGenericWesternBlocks.romanIonicColumnBase.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        romanColumn = XKRegistryHandler.Items.register("roman_column", () -> new BlockItem(XKGenericWesternBlocks.romanColumn.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        romanIonicColumnHead = XKRegistryHandler.Items.register("roman_ionic_column_head", () -> new BlockItem(XKGenericWesternBlocks.romanIonicColumnHead.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        romanIonicColumnHeadCorner = XKRegistryHandler.Items.register("roman_ionic_column_head_corner", () -> new BlockItem(XKGenericWesternBlocks.romanIonicColumnHeadCorner.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        romanCorinthianColumnBase = XKRegistryHandler.Items.register("roman_corinthian_column_base", () -> new BlockItem(XKGenericWesternBlocks.romanCorinthianColumnBase.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        romanCorinthianColumnHead = XKRegistryHandler.Items.register("roman_corinthian_column_head", () -> new BlockItem(XKGenericWesternBlocks.romanCorinthianColumnHead.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        romanCompositeColumnBase = XKRegistryHandler.Items.register("roman_composite_column_base", () -> new BlockItem(XKGenericWesternBlocks.romanCompositeColumnBase.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        romanCompositeColumnHead = XKRegistryHandler.Items.register("roman_composite_column_head", () -> new BlockItem(XKGenericWesternBlocks.romanCompositeColumnHead.get(),new Item.Properties().tab(XKTabs.xkwestern)));
        romanMoulding = XKRegistryHandler.Items.register("roman_moulding", () -> new BlockItem(XKGenericWesternBlocks.romanMoulding.get(),new Item.Properties().tab(XKTabs.xkwestern)));
    }
}
